/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 *
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared.search.persistence;

import java.io.Serializable;
import java.util.List;
import java.util.Collections;

import org.opentestsystem.shared.search.domain.AbstractSearchRequest;
import org.opentestsystem.shared.search.domain.SearchResponse;
import org.springframework.data.mongodb.core.MongoOperations;
import org.springframework.data.mongodb.repository.query.MongoEntityInformation;
import org.springframework.data.mongodb.repository.support.SimpleMongoRepository;

public class SearchableRepositoryImpl<T, ID extends Serializable> extends SimpleMongoRepository<T, ID> implements SearchableRepository<T, ID> {

    public SearchableRepositoryImpl(final MongoEntityInformation<T, ID> metadata, final MongoOperations mongoOperations) {
        super(metadata, mongoOperations);
    }

    @Override
    public SearchResponse<T> search(final AbstractSearchRequest abstractSearchRequest) {
        long total = getMongoOperations().count(abstractSearchRequest.buildQuery(), getEntityInformation().getJavaType());
        List<T> results = (total == 0) ? Collections.<T>emptyList() : getMongoOperations().find(abstractSearchRequest.buildQuery(), getEntityInformation().getJavaType());
        return new SearchResponse<T>(results, abstractSearchRequest, total);
    }

}
