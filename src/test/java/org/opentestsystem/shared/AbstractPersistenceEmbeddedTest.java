/*******************************************************************************
 * Educational Online Test Delivery System
 * Copyright (c) 2013 American Institutes for Research
 * 
 * Distributed under the AIR Open Source License, Version 1.0
 * See accompanying file AIR-License-1_0.txt or at
 * http://www.smarterapp.org/documents/American_Institutes_for_Research_Open_Source_Software_License.pdf
 ******************************************************************************/
package org.opentestsystem.shared;

import de.flapdoodle.embed.mongo.config.MongodConfigBuilder;
import de.flapdoodle.embed.mongo.config.Net;
import org.junit.After;
import org.junit.runner.RunWith;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.mongodb.core.MongoTemplate;
import org.springframework.data.mongodb.core.query.Query;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import uk.co.jemos.podam.api.PodamFactory;
import uk.co.jemos.podam.api.PodamFactoryImpl;

import de.flapdoodle.embed.mongo.MongodStarter;
import de.flapdoodle.embed.mongo.distribution.Version;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath:test-context.xml" })
public abstract class AbstractPersistenceEmbeddedTest { // NOPMD

    private static final int MONGO_TEST_PORT = 55557;

    // setup our embedded mongo once for this jvm
    static {
        try {
            MongodStarter.getDefaultInstance().prepare(new MongodConfigBuilder()
                    .version(Version.Main.PRODUCTION)
                    .net(new Net("localhost", MONGO_TEST_PORT, false))
                    .build()).start();
        } catch (Exception e) {
            new RuntimeException("something went wrong", e);
        }
    }

    private static final String SYSTEM_INDEX_STRING = "system.indexes";

    @Autowired
    protected MongoTemplate mongoTemplate;

    protected static final PodamFactory FACTORY = new PodamFactoryImpl();

    @After
    public void dropCollections() {
        for (String collectionName : mongoTemplate.getCollectionNames()) {
            if (!SYSTEM_INDEX_STRING.equals(collectionName)) {
                // disregard PMD warning for object instantiation
                mongoTemplate.remove(new Query(), collectionName); // NOPMD
            }
        }
    }

}
